#!/bin/bash

#
# Copyright (c) 2014,  Regents of the Columbia University 
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other 
# materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

# variables
APP_DIR=$QEMU_MC/apps/mongodb

# change diretory and start server
cd $APP_DIR/install
bin/mongod --fork --port=27717 --dbpath=$APP_DIR/install/data --pidfilepath=$APP_DIR/install/mongod.pid --quiet --logpath=$APP_DIR/install/mongodb.log
# --fork        fork server process (enable a daemon mode for mongod that runs the process in the background)
# --dbpath arg  defaults to /data/db

# If you want mongod to store data files at a path other than /data/db you can specify a dbpath.
# The dbpath must exist before you start mongod.
# If it does not exist, create the directory and the permissions so that mongod can read and write data to this path.

sleep 2

# test
cd ../ycsb-0.1.4
./bin/ycsb load mongodb -s -p mongodb.url=127.0.0.1:27717 -p mongodb.writeConcern=normal -p mongodb.database=records -P workloads/workloadb -threads 50
# -threads n    Number of client threads (default: 1)
# -s            Print status to stderr
# -P file       Specify workload file
# -p key=value  Override workload property

# Write concern describes the guarantee that MongoDB provides when reporting on the success of a write operation.
# The strength of the write concerns determine the level of guarantee.
# When inserts, updates and deletes have a weak write concern, write operations return quickly.
# In some failure cases, write operations issued with weak write concerns may not persist.
# With stronger write concerns, clients wait after sending a write operation for MongoDB to confirm the write operations.

# Load data into the records database

sleep 1
./bin/ycsb run mongodb -s -p mongodb.url=127.0.0.1:27717 -p mongodb.writeConcern=normal -p mongodb.database=records -P workloads/workloadb -threads 50
# Workload B: Read mostly workload
#   Application example: photo tagging; add a tag is an update, but most operations are to read tags
#
#   Read/update ratio: 95/5

# stop server
kill -SIGINT $(cat $APP_DIR/install/mongod.pid)

